/**
 * Generated by orval v6.31.0 🍺
 * Do not edit manually.
 * SMTP中继服务API
 * 基于Go+Gin的SMTP转发中继服务API文档
 * OpenAPI spec version: 1.0
 */
import type {
  ApiAPIResponse,
  ApiCreateDKIMKeyRequest,
  ApiDKIMKeyPairListResponse,
  ApiDKIMKeyPairResponse,
  ApiDKIMValidationResponse,
  ApiDNSRecordResponse,
} from "./smtpApi.schemas";
import { customAxios } from "../custom-axios";

export const getDkim = () => {
  /**
   * 获取当前用户的所有DKIM密钥对
   * @summary 获取DKIM密钥对列表
   */
  const getApiV1DkimKeys = () => {
    return customAxios<ApiDKIMKeyPairListResponse>({
      url: `/api/v1/dkim/keys`,
      method: "GET",
    });
  };
  /**
   * 为指定域名创建新的DKIM密钥对
   * @summary 创建DKIM密钥对
   */
  const postApiV1DkimKeys = (
    apiCreateDKIMKeyRequest: ApiCreateDKIMKeyRequest,
  ) => {
    return customAxios<ApiDKIMKeyPairResponse>({
      url: `/api/v1/dkim/keys`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: apiCreateDKIMKeyRequest,
    });
  };
  /**
   * 删除指定ID的DKIM密钥对
   * @summary 删除DKIM密钥对
   */
  const deleteApiV1DkimKeysId = (id: string) => {
    return customAxios<ApiAPIResponse>({
      url: `/api/v1/dkim/keys/${id}`,
      method: "DELETE",
    });
  };
  /**
   * 获取指定ID的DKIM密钥对详情
   * @summary 获取单个DKIM密钥对
   */
  const getApiV1DkimKeysId = (id: string) => {
    return customAxios<ApiDKIMKeyPairResponse>({
      url: `/api/v1/dkim/keys/${id}`,
      method: "GET",
    });
  };
  /**
   * 获取指定密钥对的DNS TXT记录信息
   * @summary 获取DKIM DNS记录
   */
  const getApiV1DkimKeysIdDns = (id: string) => {
    return customAxios<ApiDNSRecordResponse>({
      url: `/api/v1/dkim/keys/${id}/dns`,
      method: "GET",
    });
  };
  /**
   * 为指定密钥对生成新的密钥，旧密钥标记为即将过期
   * @summary 轮换DKIM密钥对
   */
  const postApiV1DkimKeysIdRotate = (id: string) => {
    return customAxios<ApiDKIMKeyPairResponse>({
      url: `/api/v1/dkim/keys/${id}/rotate`,
      method: "POST",
    });
  };
  /**
   * 验证指定密钥对的DNS记录是否正确配置
   * @summary 验证DKIM DNS记录
   */
  const postApiV1DkimKeysIdVerify = (id: string) => {
    return customAxios<ApiDKIMValidationResponse>({
      url: `/api/v1/dkim/keys/${id}/verify`,
      method: "POST",
    });
  };
  return {
    getApiV1DkimKeys,
    postApiV1DkimKeys,
    deleteApiV1DkimKeysId,
    getApiV1DkimKeysId,
    getApiV1DkimKeysIdDns,
    postApiV1DkimKeysIdRotate,
    postApiV1DkimKeysIdVerify,
  };
};
export type GetApiV1DkimKeysResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getDkim>["getApiV1DkimKeys"]>>
>;
export type PostApiV1DkimKeysResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getDkim>["postApiV1DkimKeys"]>>
>;
export type DeleteApiV1DkimKeysIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getDkim>["deleteApiV1DkimKeysId"]>>
>;
export type GetApiV1DkimKeysIdResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getDkim>["getApiV1DkimKeysId"]>>
>;
export type GetApiV1DkimKeysIdDnsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getDkim>["getApiV1DkimKeysIdDns"]>>
>;
export type PostApiV1DkimKeysIdRotateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getDkim>["postApiV1DkimKeysIdRotate"]>>
>;
export type PostApiV1DkimKeysIdVerifyResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getDkim>["postApiV1DkimKeysIdVerify"]>>
>;
